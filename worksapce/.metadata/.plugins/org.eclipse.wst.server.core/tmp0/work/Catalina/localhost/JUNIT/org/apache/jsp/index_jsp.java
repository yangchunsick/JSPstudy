/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.72
 * Generated at: 2021-11-19 06:23:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("<title>My Home Page</title>\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.js\"\n");
      out.write("	integrity=\"sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=\"\n");
      out.write("	crossorigin=\"anonymous\"></script>\n");
      out.write("	<!-- \n");
      out.write("		$('.delete_btn').click(function(){\n");
      out.write("			alert('삭제');\n");
      out.write("		});	\n");
      out.write("	 -->\n");
      out.write("	\n");
      out.write("<script>\n");
      out.write("	$(document).ready(function(){\n");
      out.write("		fnSelectBoardList();\n");
      out.write("		fnInsertBoard();\n");
      out.write("		fnDeleteBoard();\n");
      out.write("	});\n");
      out.write("	\n");
      out.write("	function fnSelectBoardList() {\n");
      out.write("		$.ajax({\n");
      out.write("			url : 'selectBoardList.do', // 요청\n");
      out.write("			type: 'get', // 타입\n");
      out.write("		//  data: 		 // 서버로 보내는 파라미터\n");
      out.write("			dataType : 'json',\n");
      out.write("			success : function(arr){	// 왜 arr를 적었는지 어떤게 왔는지 알고 싶으면 arr로 가서 보면 됌 \n");
      out.write("				// 기존 목록 지우기\n");
      out.write("				$('#board_list').empty();\n");
      out.write("				// $.each(배열, function(인덱스, 요소) {});\n");
      out.write("				$.each(arr, function(i, board) {\n");
      out.write("					$('<tr>')\n");
      out.write("					.append($('<td>').text(board.bNo))\n");
      out.write("					.append($('<td>').text(board.writer))\n");
      out.write("					.append($('<td>').text(board.content))\n");
      out.write("					.append($('<td>').text(board.bDate))\n");
      out.write("					.append($('<td>').html('<input type=\"hidden\" name=\"bNo\" value=\"'+ board.bNo +'\"><input type=\"button\" value=\"삭제\" class=\"delete_btn\">'))\n");
      out.write("					.appendTo('#board_list');\n");
      out.write("				});\n");
      out.write("			},\n");
      out.write("			error: function(){\n");
      out.write("				// 에러 처리할게 없어서 기본 구상만 채웠음.\n");
      out.write("				alert('실패');\n");
      out.write("			}\n");
      out.write("		});\n");
      out.write("	} //end\n");
      out.write("	\n");
      out.write("	function fnInsertBoard() {\n");
      out.write("		$('#insert_btn').on('click', function(){\n");
      out.write("			if($('#bNo').val().length != 5){\n");
      out.write("				alert('게시글 번호는 5자리 입니다.');\n");
      out.write("				return;\n");
      out.write("			}\n");
      out.write("			$.ajax({\n");
      out.write("				url: 'insertBoard.do', // 요청\n");
      out.write("				type: 'post',\n");
      out.write("				data: $('#f').serialize(), // 폼의 모든 요소를 파라미터로 보냄.\n");
      out.write("				dataType: 'json', 		// 받아오는 건 json 타입의 데이터\n");
      out.write("				success: function(obj) {\n");
      out.write("					alert(obj.result);\n");
      out.write("					fnSelectBoardList();\n");
      out.write("				},\n");
      out.write("				error: function(xhr){ // 응답 텍스트는 xhr 객체에 responseText 프로퍼티로 전달됨.\n");
      out.write("					if(xhr.status == 1111){	// response.setStatus(1); 코드로 보낸 값을 받음\n");
      out.write("						alert(xhr.responseText);					\n");
      out.write("					}\n");
      out.write("				}\n");
      out.write("			});\n");
      out.write("		});\n");
      out.write("	} // end\n");
      out.write("	\n");
      out.write("	function fnDeleteBoard() {\n");
      out.write("		$('body').on('click', '.delete_btn', function(){\n");
      out.write("			if(confirm('삭제 할까요 ?')){\n");
      out.write("				$.ajax({\n");
      out.write("					url: 'deleteBoard.do',\n");
      out.write("					type: 'get',\n");
      out.write("					data: 'bNo=' + $(this).prev().val(),\n");
      out.write("					dataType: 'json',\n");
      out.write("					success: function(obj) {\n");
      out.write("						if(obj.result){\n");
      out.write("							alert('삭제 성공');\n");
      out.write("							fnSelectBoardList();\n");
      out.write("						}else{\n");
      out.write("							alert('삭제 실패');\n");
      out.write("						}\n");
      out.write("					},\n");
      out.write("					error: function() {\n");
      out.write("						alert('알 수 없는 삭제 오류');\n");
      out.write("					}					\n");
      out.write("				})\n");
      out.write("			}\n");
      out.write("		});\n");
      out.write("	}\n");
      out.write("</script>\n");
      out.write("<style type=\"text/css\">\n");
      out.write("* {\n");
      out.write("	padding: 0;\n");
      out.write("	margin: 0;\n");
      out.write("	box-sizing: border-box;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".wrap {\n");
      out.write("	width: 1500px;\n");
      out.write("	padding: 10px;\n");
      out.write("	margin: 0 auto;\n");
      out.write("	display: flex;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".input_area {\n");
      out.write("	width: 300px;\n");
      out.write("	padding: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".list_area {\n");
      out.write("	width: 1200px;\n");
      out.write("	padding: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".list_area table {\n");
      out.write("	width: 100%;\n");
      out.write("	border-collapse: collapse;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".list_area table td {\n");
      out.write("	border-top: 1px solid gray;\n");
      out.write("	border-bottom: 1px solid gray;\n");
      out.write("	padding: 3px 5px;\n");
      out.write("	text-align: center;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("	<div class=\"wrap\">\n");
      out.write("		<div class=\"input_area\">\n");
      out.write("			<form id=\"f\" action=\"\">\n");
      out.write("				<input type=\"text\" name=\"bNo\" id=\"bNo\" placeholder=\"5자리 번호\"><br>\n");
      out.write("				<input type=\"text\" name=\"writer\" id=\"writer\" placeholder=\"작성자\"><br>\n");
      out.write("				<input type=\"text\" name=\"content\" id=\"content\" placeholder=\"내용\"><br>\n");
      out.write("				<input type=\"button\" value=\"등록\" id=\"insert_btn\">\n");
      out.write("			</form>\n");
      out.write("		</div>\n");
      out.write("		<div class=\"list_area\">\n");
      out.write("			<table>\n");
      out.write("				<thead>\n");
      out.write("					<tr>\n");
      out.write("						<td>글번호</td>\n");
      out.write("						<td>작성자</td>\n");
      out.write("						<td>내용</td>\n");
      out.write("						<td>작성일</td>\n");
      out.write("						<td></td>\n");
      out.write("					</tr>\n");
      out.write("				</thead>\n");
      out.write("				<tbody id=\"board_list\">\n");
      out.write("\n");
      out.write("				</tbody>\n");
      out.write("			</table>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
